/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tampilan;
import java.sql.*;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import koneksi.koneksi;

/**
 *
 * @author BrownBox
 */
public final class FormPeminjamanBuku extends javax.swing.JFrame {
    private final Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode;  
    String id_transaksi;
    String lastCharacterId = "0";
    
    /**
     * Creates new form FormTransaksi
     */
    public FormPeminjamanBuku() {
        initComponents();
        datatable();
        getNextIdTransaksi();
        
        java.util.Date date = Calendar.getInstance().getTime();  
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");  
        String strDate = dateFormat.format(date);  
        System.out.println("Converted String: " + strDate);  
        jLabelTgl.setText(strDate);
        jLabelTgl.setVisible(false);   
    }

    protected void kosong(){
        textfieldIDAnggota.setText("");
        textfieldKodeBuku.setText("");
    }
    protected void kosongkanDataBuku(){
        textfieldKodeBuku.setText("");
        labelJudulBuku.setText("-");
        labelPengarangBuku.setText("-");
        labelPenerbitBuku.setText("-");
        labelJumlah.setText("-");
        textfieldKodeBuku.requestFocus();
    }
    protected void kosongkanDataAnggota(){
        textfieldIDAnggota.setText("");
        labelNama.setText("-");
        labelNIS.setText("-");
        labelNoTeleponAnggota.setText("-");
        textfieldKodeBuku.requestFocus();
    }
    
    public void getNextIdTransaksi(){
        String sql = "SELECT id_transaksi FROM transaksi ORDER BY id_transaksi DESC LIMIT 1";
        try{
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while(hasil.next()){
                id_transaksi = hasil.getString("id_transaksi");
                System.out.println("id transaksi terakhir : "+id_transaksi);
                lastCharacterId =  id_transaksi.length() > 2 ? id_transaksi.substring(id_transaksi.length() -1) : id_transaksi;
                System.out.println("id transaksi terakhir : "+id_transaksi);
                System.out.println("ambil 1 karakter terakhir id transaksi terakhir : "+lastCharacterId);
            }
        }catch (SQLException e){
                    
        }
                
        // Untuk generate ID Transaksi YYYYMMXX
        // XX : Id terakhir
        java.util.Date today = new java.util.Date();
        Calendar cal = Calendar.getInstance();
        cal.setTime(today);
        System.out.println(today);
        int dayOfMonth = cal.get(Calendar.MONTH)+1;
        int dayOfYear = cal.get(Calendar.YEAR);
        System.out.println("dayOfMonth :" + dayOfMonth);
        System.out.println("dayOfYear :" + dayOfYear);
        
        int newId = Integer.parseInt(lastCharacterId) + 1;
        System.out.println("getsubstring :" + newId);
                
        String month = Integer.toString(dayOfMonth);
        String year = Integer.toString(dayOfYear);
        String noIdTransaksi = Integer.toString(newId);
        
        String IDTransaksi = "BR"+year+month+noIdTransaksi;
        textfieldIDTransaksi.setText(IDTransaksi);
    }
  
    //Menampilkan data dari database ke table
    protected void datatable(){
        Object[] Baris = {"ID Transaksi", "Tgl Pinjam", "Tgl Kembali", "ID Anggota", 
            "Nama", "Kode Buku", "Judul Buku", "Status"};
        tabmode = new DefaultTableModel(null, Baris);
        tableTransaksiPeminjamanBuku.setModel(tabmode);
        String sql = "SELECT * FROM transaksi where status='dipinjam'";
        try{
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while(hasil.next()){
                String a = hasil.getString("id_transaksi");
                String b = hasil.getString("tgl_pinjam");
                String c = hasil.getString("tgl_kembali");
                String d = hasil.getString("id_anggota");
                String e = hasil.getString("nama");
                String f = hasil.getString("kode_buku");
                String g = hasil.getString("judul_buku");
                String h = hasil.getString("status");
                String[] data={a, b, c, d, e, f, g, h};
                tabmode.addRow(data);
            }
        }catch (SQLException e){                  
        }        
    }
       
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textfieldIDTransaksi = new javax.swing.JTextField();
        labelKodeBuku1 = new javax.swing.JLabel();
        labelKodeBuku2 = new javax.swing.JLabel();
        labelKodeBuku6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTransaksiPeminjamanBuku = new javax.swing.JTable();
        buttonClear = new javax.swing.JButton();
        buttonSimpan = new javax.swing.JButton();
        buttonHapus = new javax.swing.JButton();
        labelKodeBuku3 = new javax.swing.JLabel();
        labelTitle1 = new javax.swing.JLabel();
        panelAnggota1 = new javax.swing.JPanel();
        labelKodeBuku8 = new javax.swing.JLabel();
        labelKodeBuku7 = new javax.swing.JLabel();
        textfieldKodeBuku = new javax.swing.JTextField();
        labelJudulBuku = new javax.swing.JLabel();
        labelKodeBuku13 = new javax.swing.JLabel();
        labelPengarangBuku = new javax.swing.JLabel();
        labelKodeBuku10 = new javax.swing.JLabel();
        labelPenerbitBuku = new javax.swing.JLabel();
        labelKodeBuku9 = new javax.swing.JLabel();
        labelJumlah = new javax.swing.JLabel();
        buttonSearchKodeBuku = new javax.swing.JButton();
        panelAnggota = new javax.swing.JPanel();
        labelKodeBuku = new javax.swing.JLabel();
        labelKodeBuku12 = new javax.swing.JLabel();
        labelKodeBuku14 = new javax.swing.JLabel();
        labelKodeBuku5 = new javax.swing.JLabel();
        textfieldIDAnggota = new javax.swing.JTextField();
        labelNama = new javax.swing.JLabel();
        labelNIS = new javax.swing.JLabel();
        labelNoTeleponAnggota = new javax.swing.JLabel();
        buttonSearchAnggota = new javax.swing.JButton();
        jLabelTgl = new javax.swing.JLabel();
        dateChooserTglKembali = new com.toedter.calendar.JDateChooser();
        dateChooserTglPinjam = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        labelKodeBuku16 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuLaporan1 = new javax.swing.JMenu();
        jMenuItemMenuPetugas = new javax.swing.JMenuItem();
        jMenuItemMenuPengunjung = new javax.swing.JMenuItem();
        jMenuMaster = new javax.swing.JMenu();
        jMenuItemInputDataBuku = new javax.swing.JMenuItem();
        jMenuItemRegistrasiAnggota = new javax.swing.JMenuItem();
        jMenuItemRegistrasiPetugas = new javax.swing.JMenuItem();
        jMenuTransaksi = new javax.swing.JMenu();
        jMenuItemPeminjamanBuku = new javax.swing.JMenuItem();
        jMenuItemPengembalianBuku = new javax.swing.JMenuItem();
        jMenuLaporan = new javax.swing.JMenu();
        jMenuLogout = new javax.swing.JMenu();
        jMenuItemLogout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Peminjaman Buku");
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 51, 51));
        jPanel1.setPreferredSize(new java.awt.Dimension(1000, 630));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        textfieldIDTransaksi.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        textfieldIDTransaksi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 231, 232)));
        textfieldIDTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldIDTransaksiActionPerformed(evt);
            }
        });
        jPanel1.add(textfieldIDTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 100, 180, 30));

        labelKodeBuku1.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku1.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku1.setText("Tanggal Pinjam");
        jPanel1.add(labelKodeBuku1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, -1, 20));

        labelKodeBuku2.setBackground(new java.awt.Color(71, 127, 255));
        labelKodeBuku2.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku2.setForeground(new java.awt.Color(9, 110, 59));
        labelKodeBuku2.setText("Data Anggota");
        jPanel1.add(labelKodeBuku2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 150, -1, 20));

        labelKodeBuku6.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku6.setForeground(new java.awt.Color(9, 110, 59));
        labelKodeBuku6.setText("Data Buku");
        jPanel1.add(labelKodeBuku6, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 150, -1, 20));

        tableTransaksiPeminjamanBuku.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableTransaksiPeminjamanBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTransaksiPeminjamanBukuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableTransaksiPeminjamanBuku);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 420, 900, 90));

        buttonClear.setBackground(new java.awt.Color(9, 110, 59));
        buttonClear.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        buttonClear.setForeground(new java.awt.Color(255, 255, 255));
        buttonClear.setText("Bersihkan");
        buttonClear.setBorder(null);
        buttonClear.setPreferredSize(new java.awt.Dimension(75, 30));
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });
        jPanel1.add(buttonClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 520, 90, -1));

        buttonSimpan.setBackground(new java.awt.Color(9, 110, 59));
        buttonSimpan.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        buttonSimpan.setForeground(new java.awt.Color(255, 255, 255));
        buttonSimpan.setText("Simpan");
        buttonSimpan.setBorder(null);
        buttonSimpan.setPreferredSize(new java.awt.Dimension(75, 30));
        buttonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSimpanActionPerformed(evt);
            }
        });
        jPanel1.add(buttonSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 520, 90, -1));

        buttonHapus.setBackground(new java.awt.Color(9, 110, 59));
        buttonHapus.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        buttonHapus.setForeground(new java.awt.Color(255, 255, 255));
        buttonHapus.setText("Hapus");
        buttonHapus.setBorder(null);
        buttonHapus.setPreferredSize(new java.awt.Dimension(75, 30));
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });
        jPanel1.add(buttonHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 520, 80, -1));

        labelKodeBuku3.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku3.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku3.setText("Tanggal Kembali");
        jPanel1.add(labelKodeBuku3, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 80, -1, 20));

        labelTitle1.setBackground(new java.awt.Color(71, 127, 255));
        labelTitle1.setFont(new java.awt.Font("Montserrat SemiBold", 1, 24)); // NOI18N
        labelTitle1.setForeground(new java.awt.Color(9, 110, 59));
        labelTitle1.setText("Transaksi Peminjaman Buku");
        jPanel1.add(labelTitle1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, -1, -1));

        panelAnggota1.setBackground(new java.awt.Color(255, 255, 255));
        panelAnggota1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 231, 232)));
        panelAnggota1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelKodeBuku8.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku8.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku8.setText("Judul");
        panelAnggota1.add(labelKodeBuku8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 20));

        labelKodeBuku7.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku7.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku7.setText("Kode Buku");
        panelAnggota1.add(labelKodeBuku7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, -1, 20));

        textfieldKodeBuku.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        textfieldKodeBuku.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 231, 232)));
        textfieldKodeBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldKodeBukuActionPerformed(evt);
            }
        });
        panelAnggota1.add(textfieldKodeBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, 130, 30));

        labelJudulBuku.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        labelJudulBuku.setText("-");
        panelAnggota1.add(labelJudulBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 190, 20));

        labelKodeBuku13.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku13.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku13.setText("Pengarang");
        panelAnggota1.add(labelKodeBuku13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, 20));

        labelPengarangBuku.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        labelPengarangBuku.setText("-");
        panelAnggota1.add(labelPengarangBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 190, 20));

        labelKodeBuku10.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku10.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku10.setText("Penerbit");
        panelAnggota1.add(labelKodeBuku10, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, -1, 20));

        labelPenerbitBuku.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        labelPenerbitBuku.setText("-");
        panelAnggota1.add(labelPenerbitBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 150, 190, 20));

        labelKodeBuku9.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku9.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku9.setText("Stock");
        panelAnggota1.add(labelKodeBuku9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, 20));

        labelJumlah.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        labelJumlah.setText("-");
        panelAnggota1.add(labelJumlah, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 190, 20));

        buttonSearchKodeBuku.setBackground(new java.awt.Color(9, 110, 59));
        buttonSearchKodeBuku.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        buttonSearchKodeBuku.setForeground(new java.awt.Color(255, 255, 255));
        buttonSearchKodeBuku.setText("Cari");
        buttonSearchKodeBuku.setToolTipText("");
        buttonSearchKodeBuku.setBorder(null);
        buttonSearchKodeBuku.setPreferredSize(new java.awt.Dimension(50, 22));
        buttonSearchKodeBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchKodeBukuActionPerformed(evt);
            }
        });
        panelAnggota1.add(buttonSearchKodeBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, 30));

        jPanel1.add(panelAnggota1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 170, 370, 230));

        panelAnggota.setBackground(new java.awt.Color(255, 255, 255));
        panelAnggota.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 231, 232)));
        panelAnggota.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelKodeBuku.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku.setText("ID Anggota");
        panelAnggota.add(labelKodeBuku, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 20));

        labelKodeBuku12.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku12.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku12.setText("Nama");
        panelAnggota.add(labelKodeBuku12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, 20));

        labelKodeBuku14.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku14.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku14.setText("NIS");
        panelAnggota.add(labelKodeBuku14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, 20));

        labelKodeBuku5.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku5.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku5.setText("No Telepon");
        panelAnggota.add(labelKodeBuku5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 20));

        textfieldIDAnggota.setFont(new java.awt.Font("Segoe UI Light", 0, 14)); // NOI18N
        textfieldIDAnggota.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 231, 232)));
        textfieldIDAnggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textfieldIDAnggotaActionPerformed(evt);
            }
        });
        panelAnggota.add(textfieldIDAnggota, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, 130, 30));

        labelNama.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        labelNama.setText("-");
        panelAnggota.add(labelNama, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 180, 20));

        labelNIS.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        labelNIS.setText("-");
        panelAnggota.add(labelNIS, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 180, 20));

        labelNoTeleponAnggota.setFont(new java.awt.Font("Segoe UI Light", 1, 14)); // NOI18N
        labelNoTeleponAnggota.setText("-");
        panelAnggota.add(labelNoTeleponAnggota, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, 180, 20));

        buttonSearchAnggota.setBackground(new java.awt.Color(9, 110, 59));
        buttonSearchAnggota.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        buttonSearchAnggota.setForeground(new java.awt.Color(255, 255, 255));
        buttonSearchAnggota.setText("Cari");
        buttonSearchAnggota.setToolTipText("");
        buttonSearchAnggota.setBorder(null);
        buttonSearchAnggota.setPreferredSize(new java.awt.Dimension(50, 22));
        buttonSearchAnggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchAnggotaActionPerformed(evt);
            }
        });
        panelAnggota.add(buttonSearchAnggota, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, -1, 30));

        jPanel1.add(panelAnggota, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 170, 350, 230));

        jLabelTgl.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        jLabelTgl.setForeground(new java.awt.Color(153, 153, 153));
        jLabelTgl.setText("ID Transaksi");
        jPanel1.add(jLabelTgl, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 10, -1, 20));
        jPanel1.add(dateChooserTglKembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 100, 150, -1));
        jPanel1.add(dateChooserTglPinjam, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 100, 150, -1));
        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, -60, -1, -1));

        labelKodeBuku16.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        labelKodeBuku16.setForeground(new java.awt.Color(153, 153, 153));
        labelKodeBuku16.setText("ID Transaksi");
        jPanel1.add(labelKodeBuku16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, -1, 20));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 570));

        jMenuBar1.setBackground(new java.awt.Color(245, 247, 250));
        jMenuBar1.setPreferredSize(new java.awt.Dimension(76, 40));

        jMenuLaporan1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuLaporan1.setForeground(new java.awt.Color(51, 51, 51));
        jMenuLaporan1.setText("Menu");
        jMenuLaporan1.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        jMenuLaporan1.setIconTextGap(20);
        jMenuLaporan1.setMargin(new java.awt.Insets(2, 20, 2, 20));
        jMenuLaporan1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuLaporan1MouseClicked(evt);
            }
        });

        jMenuItemMenuPetugas.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemMenuPetugas.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jMenuItemMenuPetugas.setText("Menu Petugas");
        jMenuItemMenuPetugas.setPreferredSize(new java.awt.Dimension(280, 30));
        jMenuItemMenuPetugas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItemMenuPetugasMouseClicked(evt);
            }
        });
        jMenuItemMenuPetugas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMenuPetugasActionPerformed(evt);
            }
        });
        jMenuLaporan1.add(jMenuItemMenuPetugas);

        jMenuItemMenuPengunjung.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemMenuPengunjung.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jMenuItemMenuPengunjung.setText("Menu Pengunjung");
        jMenuItemMenuPengunjung.setPreferredSize(new java.awt.Dimension(280, 30));
        jMenuItemMenuPengunjung.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMenuPengunjungActionPerformed(evt);
            }
        });
        jMenuLaporan1.add(jMenuItemMenuPengunjung);

        jMenuBar1.add(jMenuLaporan1);

        jMenuMaster.setBackground(new java.awt.Color(255, 255, 255));
        jMenuMaster.setForeground(new java.awt.Color(51, 51, 51));
        jMenuMaster.setText("Master");
        jMenuMaster.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        jMenuMaster.setIconTextGap(20);
        jMenuMaster.setMargin(new java.awt.Insets(2, 20, 2, 20));

        jMenuItemInputDataBuku.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemInputDataBuku.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jMenuItemInputDataBuku.setText("Data Buku");
        jMenuItemInputDataBuku.setPreferredSize(new java.awt.Dimension(280, 30));
        jMenuItemInputDataBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItemInputDataBukuMouseClicked(evt);
            }
        });
        jMenuItemInputDataBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemInputDataBukuActionPerformed(evt);
            }
        });
        jMenuMaster.add(jMenuItemInputDataBuku);

        jMenuItemRegistrasiAnggota.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemRegistrasiAnggota.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jMenuItemRegistrasiAnggota.setText("Data Anggota");
        jMenuItemRegistrasiAnggota.setPreferredSize(new java.awt.Dimension(280, 30));
        jMenuItemRegistrasiAnggota.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItemRegistrasiAnggotaMouseClicked(evt);
            }
        });
        jMenuItemRegistrasiAnggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRegistrasiAnggotaActionPerformed(evt);
            }
        });
        jMenuMaster.add(jMenuItemRegistrasiAnggota);

        jMenuItemRegistrasiPetugas.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemRegistrasiPetugas.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jMenuItemRegistrasiPetugas.setText("Data Petugas");
        jMenuItemRegistrasiPetugas.setPreferredSize(new java.awt.Dimension(280, 30));
        jMenuItemRegistrasiPetugas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItemRegistrasiPetugasMouseClicked(evt);
            }
        });
        jMenuItemRegistrasiPetugas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemRegistrasiPetugasActionPerformed(evt);
            }
        });
        jMenuMaster.add(jMenuItemRegistrasiPetugas);

        jMenuBar1.add(jMenuMaster);

        jMenuTransaksi.setBackground(new java.awt.Color(255, 255, 255));
        jMenuTransaksi.setForeground(new java.awt.Color(51, 51, 51));
        jMenuTransaksi.setText("Transaksi");
        jMenuTransaksi.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        jMenuTransaksi.setIconTextGap(20);
        jMenuTransaksi.setMargin(new java.awt.Insets(2, 20, 2, 20));
        jMenuTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuTransaksiMouseClicked(evt);
            }
        });
        jMenuTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuTransaksiActionPerformed(evt);
            }
        });

        jMenuItemPeminjamanBuku.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemPeminjamanBuku.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jMenuItemPeminjamanBuku.setText("Peminjaman");
        jMenuItemPeminjamanBuku.setPreferredSize(new java.awt.Dimension(280, 30));
        jMenuItemPeminjamanBuku.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItemPeminjamanBukuMouseClicked(evt);
            }
        });
        jMenuItemPeminjamanBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPeminjamanBukuActionPerformed(evt);
            }
        });
        jMenuTransaksi.add(jMenuItemPeminjamanBuku);

        jMenuItemPengembalianBuku.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemPengembalianBuku.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jMenuItemPengembalianBuku.setText("Pengembalian");
        jMenuItemPengembalianBuku.setPreferredSize(new java.awt.Dimension(280, 30));
        jMenuItemPengembalianBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPengembalianBukuActionPerformed(evt);
            }
        });
        jMenuTransaksi.add(jMenuItemPengembalianBuku);

        jMenuBar1.add(jMenuTransaksi);

        jMenuLaporan.setBackground(new java.awt.Color(255, 255, 255));
        jMenuLaporan.setForeground(new java.awt.Color(51, 51, 51));
        jMenuLaporan.setText("Laporan");
        jMenuLaporan.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        jMenuLaporan.setIconTextGap(20);
        jMenuLaporan.setMargin(new java.awt.Insets(2, 20, 2, 20));
        jMenuLaporan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuLaporanMouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenuLaporan);

        jMenuLogout.setBackground(new java.awt.Color(255, 255, 255));
        jMenuLogout.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jMenuLogout.setForeground(new java.awt.Color(51, 51, 51));
        jMenuLogout.setText("Exit");
        jMenuLogout.setFont(new java.awt.Font("Montserrat SemiBold", 0, 14)); // NOI18N
        jMenuLogout.setIconTextGap(40);
        jMenuLogout.setMargin(new java.awt.Insets(2, 20, 2, 20));
        jMenuLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuLogoutActionPerformed(evt);
            }
        });

        jMenuItemLogout.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItemLogout.setFont(new java.awt.Font("Montserrat Medium", 0, 14)); // NOI18N
        jMenuItemLogout.setText("Logout");
        jMenuItemLogout.setPreferredSize(new java.awt.Dimension(280, 30));
        jMenuItemLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLogoutActionPerformed(evt);
            }
        });
        jMenuLogout.add(jMenuItemLogout);

        jMenuBar1.add(jMenuLogout);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void textfieldIDTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldIDTransaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfieldIDTransaksiActionPerformed

    private void textfieldKodeBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldKodeBukuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfieldKodeBukuActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        // TODO add your handling code here:
        kosong();
        kosongkanDataAnggota();
        kosongkanDataBuku();
        textfieldIDTransaksi.requestFocus();
        
    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        // TODO add your handling code here:
        int ok = JOptionPane.showConfirmDialog(null, "Hapus?", "Konfirmasi Dialog",
        JOptionPane.YES_NO_CANCEL_OPTION);
        
        int jumlahBuku = Integer.parseInt(labelJumlah.getText()); 
        String kodeBuku = textfieldKodeBuku.getText();
        
        if(ok == 0){
            String sql = "DELETE FROM transaksi WHERE id_transaksi='"
                    +textfieldIDTransaksi.getText()+"'";
            try{
                PreparedStatement stat =conn.prepareStatement(sql);
                stat.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Berhasil dihapus");
                kosong();
                kosongkanDataAnggota();
                kosongkanDataBuku();
                textfieldIDTransaksi.requestFocus();
                datatable();
                
                //Kalau data berhasil dihapus, maka stock buku kembali 1
                try {
                    System.out.println("Kode buku :"+kodeBuku);
                    
                    String sqlUpdateStock = "UPDATE buku SET jumlah=? where kode_buku='"+kodeBuku+"'";
                    PreparedStatement statment = conn.prepareStatement(sqlUpdateStock);
                    System.out.println("Jumlah Buku sebelum : "+jumlahBuku);
                    
                    int x = jumlahBuku + 1;
                    String jumlahStockAkhir = Integer.toString(x);
                    statment.setString(1, jumlahStockAkhir);
                    System.out.println("Jumlah Buku sesudah : "+x);

                    statment.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Stock bertambah 1");
                    getNextIdTransaksi();

                }catch(SQLException e){
                    JOptionPane.showMessageDialog(null, "Data Gagal bertambah"+e);
                }
                
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "Data gagal dihapus "+e);
            }
       }
    }//GEN-LAST:event_buttonHapusActionPerformed

    private void buttonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSimpanActionPerformed
        // TODO add your handling code here:        
        java.util.Date tglPinjam = (java.util.Date) this.dateChooserTglPinjam.getDate();
        java.util.Date tglKembali = (java.util.Date) this.dateChooserTglKembali.getDate();      
          
        if(textfieldIDTransaksi.getText().equals("") ||
            dateChooserTglPinjam.getDate() == null ||
            dateChooserTglKembali.getDate() == null ||
            labelJumlah.getText().equals("")
          ){      
            javax.swing.JOptionPane. showMessageDialog(null,"Data belum lengkap. \nSilahkan periksa kembali.",
            "Error",
            javax.swing.JOptionPane.ERROR_MESSAGE);  
        }else{
            try {         
                String nisPengunjung = labelNIS.getText();

                String sqlCek = "SELECT * FROM pengunjung WHERE nis='"+nisPengunjung+"'"
                        + " AND tgl_kunjungan='"+jLabelTgl.getText()+"'";

                java.sql.Statement stat1 = conn.createStatement();
                ResultSet hasil = stat1.executeQuery(sqlCek);
                
                if(hasil.next()){
                        String kodeBuku;
                        int jumlahBuku = Integer.parseInt(labelJumlah.getText());
                        String statusPinjam = "dipinjam";
                        if(jumlahBuku > 0){
                            try{
                                String sql = "INSERT INTO transaksi VALUES (?,?,?,?,?,?,?,?,?)";

                                PreparedStatement stat = conn.prepareStatement(sql);
                                stat.setString(1, textfieldIDTransaksi.getText());
                                stat.setDate(2, new Date(tglPinjam.getTime()));
                                stat.setDate(3, new Date(tglKembali.getTime()));            
                                stat.setString(4, textfieldIDAnggota.getText());            
                                stat.setString(5, labelNama.getText());
                                stat.setString(6, textfieldKodeBuku.getText()); 
                                stat.setString(7, labelJudulBuku.getText());
                                stat.setString(8, "0");
                                stat.setString(9, statusPinjam);

                                stat.executeUpdate();
                                JOptionPane.showMessageDialog(null, "Data Transaksi Berhasil Disimpan");

                                kodeBuku = textfieldKodeBuku.getText();              
                                textfieldKodeBuku.requestFocus();
                                datatable();

                                //Jika Transaksi berhasil disimpan, maka stock buku berkurang
                                try {
                                    System.out.println("Kode buku :"+kodeBuku);

                                    String sqlUpdateStock = "UPDATE buku SET jumlah=? where kode_buku='"+kodeBuku+"'";
                                    PreparedStatement statment = conn.prepareStatement(sqlUpdateStock);
                                    System.out.println("Jumlah Buku sebelum : "+jumlahBuku);

                                    int x = jumlahBuku - 1;
                                    String jumlahStockAkhir = Integer.toString(x);
                                    statment.setString(1, jumlahStockAkhir);
                                    System.out.println("Jumlah Buku sesudah : "+x);

                                    statment.executeUpdate();
                                    JOptionPane.showMessageDialog(null, "Stock dikurangi 1");

                                }catch(SQLException e){
                                    JOptionPane.showMessageDialog(null, "Data Gagal dikurangi"+e);
                                }                   

                                kosong();  
                                kosongkanDataAnggota();
                                kosongkanDataBuku();
                                getNextIdTransaksi();
                            }catch(SQLException e){
                                JOptionPane.showMessageDialog(null, "Data Gagal Disimpan "+e);
                            }
                        }else{
                           JOptionPane.showMessageDialog(null, "Stock Buku Habis");
                           kosong();  
                           kosongkanDataAnggota();
                           kosongkanDataBuku();
                           getNextIdTransaksi();
                        }                 
                }else{
                        String sqlPengunjung = "INSERT INTO pengunjung (nis, nama, tgl_kunjungan) VALUES (?,?,?)";
                        try{
                            PreparedStatement statPengunjung = conn.prepareStatement(sqlPengunjung);
                            statPengunjung.setString(1, labelNIS.getText());
                            statPengunjung.setString(2, labelNama.getText());
                            statPengunjung.setString(3, jLabelTgl.getText());
                            statPengunjung.executeUpdate();
                            
                            String kodeBuku;
                            int jumlahBuku = Integer.parseInt(labelJumlah.getText());
                            String statusPinjam = "dipinjam";
                            if(jumlahBuku > 0){
                                try{
                                    String sql = "INSERT INTO transaksi VALUES (?,?,?,?,?,?,?,?,?)";

                                    PreparedStatement stat = conn.prepareStatement(sql);
                                    stat.setString(1, textfieldIDTransaksi.getText());
                                    stat.setDate(2, new Date(tglPinjam.getTime()));
                                    stat.setDate(3, new Date(tglKembali.getTime()));            
                                    stat.setString(4, textfieldIDAnggota.getText());            
                                    stat.setString(5, labelNama.getText());
                                    stat.setString(6, textfieldKodeBuku.getText()); 
                                    stat.setString(7, labelJudulBuku.getText());
                                    stat.setString(8, "0");
                                    stat.setString(9, statusPinjam);

                                    stat.executeUpdate();
                                    JOptionPane.showMessageDialog(null, "Data Transaksi Berhasil Disimpan");

                                    kodeBuku = textfieldKodeBuku.getText();              
                                    textfieldKodeBuku.requestFocus();
                                    datatable();

                                    //Jika Transaksi berhasil disimpan, maka stock buku berkurang
                                    try {
                                        System.out.println("Kode buku :"+kodeBuku);

                                        String sqlUpdateStock = "UPDATE buku SET jumlah=? where kode_buku='"+kodeBuku+"'";
                                        PreparedStatement statment = conn.prepareStatement(sqlUpdateStock);
                                        System.out.println("Jumlah Buku sebelum : "+jumlahBuku);

                                        int x = jumlahBuku - 1;
                                        String jumlahStockAkhir = Integer.toString(x);
                                        statment.setString(1, jumlahStockAkhir);
                                        System.out.println("Jumlah Buku sesudah : "+x);

                                        statment.executeUpdate();
                                        JOptionPane.showMessageDialog(null, "Stock dikurangi 1");

                                    }catch(SQLException e){
                                        JOptionPane.showMessageDialog(null, "Data Gagal dikurangi"+e);
                                    }                   

                                    kosong();  
                                    kosongkanDataAnggota();
                                    kosongkanDataBuku();
                                    getNextIdTransaksi();
                                }catch(SQLException e){
                                    JOptionPane.showMessageDialog(null, "Data Gagal Disimpan "+e);
                                }
                            }else{
                               JOptionPane.showMessageDialog(null, "Stock Buku Habis");
                               kosong();  
                               kosongkanDataAnggota();
                               kosongkanDataBuku();
                               getNextIdTransaksi();
                            }  
                        }catch(SQLException e){
                            System.out.println("insert ke pengunjung : "+e);
                        }
            
                    }
            }catch(SQLException e){
                System.out.println("error cek pengunjung : "+e);
            }
            
        }
    }//GEN-LAST:event_buttonSimpanActionPerformed

    private void textfieldIDAnggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textfieldIDAnggotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textfieldIDAnggotaActionPerformed

    private void buttonSearchAnggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchAnggotaActionPerformed
        // TODO add your handling code here:
        if(textfieldIDAnggota.getText().equals("")){
            javax.swing.JOptionPane. showMessageDialog(null,"Masukan ID Anggota",
            "Error",
            javax.swing.JOptionPane.ERROR_MESSAGE);            
        }else{
            try{
                String sql = "SELECT * FROM anggota where id_anggota='"+textfieldIDAnggota.getText()+"'";
                java.sql.Statement stat = conn.createStatement();
                ResultSet hasil = stat.executeQuery(sql);

                if(hasil.next()){
                    String a = hasil.getString("nama");
                    String b = hasil.getString("nis");
                    String c = hasil.getString("no_tlp");

                    labelNama.setText(a);
                    labelNIS.setText(b);
                    labelNoTeleponAnggota.setText(c);
                }else{
                    JOptionPane.showMessageDialog(null, "ID anggota yang anda masukan salah!");
                    kosongkanDataAnggota();
                }
            }catch(SQLException e){
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_buttonSearchAnggotaActionPerformed

    private void buttonSearchKodeBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchKodeBukuActionPerformed
        // TODO add your handling code here:
        if(textfieldKodeBuku.getText().equals("")){
            javax.swing.JOptionPane. showMessageDialog(null,"Masukan Kode Buku",
            "Error",
            javax.swing.JOptionPane.ERROR_MESSAGE);            
        }else{
            try{
                String sql = "SELECT * FROM buku where kode_buku='"+textfieldKodeBuku.getText()+"'";
                java.sql.Statement stat = conn.createStatement();
                ResultSet hasil = stat.executeQuery(sql);

                if(hasil.next()){
                    String a = hasil.getString("judul_buku");
                    String b = hasil.getString("pengarang");                
                    String c = hasil.getString("penerbit");
                    String d = hasil.getString("jumlah");

                    labelJudulBuku.setText(a);
                    labelPengarangBuku.setText(b);
                    labelPenerbitBuku.setText(c);
                    labelJumlah.setText(d);
                }else{
                    JOptionPane.showMessageDialog(null, "Kode buku yang anda masukan salah!"); 
                    kosongkanDataBuku();
                }
            }catch(SQLException e){
                JOptionPane.showMessageDialog(this, e.getMessage());            
            }
        }
    }//GEN-LAST:event_buttonSearchKodeBukuActionPerformed

    private void tableTransaksiPeminjamanBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTransaksiPeminjamanBukuMouseClicked
        // TODO add your handling code here:
        int bar = tableTransaksiPeminjamanBuku.getSelectedRow();
        String a = tabmode.getValueAt(bar, 0).toString();
        String b = tabmode.getValueAt(bar, 1).toString();
        String c = tabmode.getValueAt(bar, 2).toString();
        String d = tabmode.getValueAt(bar, 3).toString();
        String e = tabmode.getValueAt(bar, 4).toString();
        String f = tabmode.getValueAt(bar, 5).toString();
        String g = tabmode.getValueAt(bar, 6).toString();
        
        textfieldIDTransaksi.setText(a);
        
        //Convert dari String yang didapat dari sql ke Date
        try{            
            java.util.Date tglPinjam = new SimpleDateFormat("yyyy-MM-dd").parse(b);
            java.util.Date tglKembali = new SimpleDateFormat("yyyy-MM-dd").parse(c);         
            
            dateChooserTglPinjam.setDate(tglPinjam);
            dateChooserTglKembali.setDate(tglKembali);
        }catch(ParseException ex){
            System.out.println("Date Parse Exception :"+ex);
        }
        
        textfieldIDAnggota.setText(d);            
        labelNama.setText(e);
        textfieldKodeBuku.setText(f);
        labelJudulBuku.setText(g);  

        //Jika row di table di click, data buku juga terisi
        try{
            String sql = "SELECT * FROM buku where kode_buku='"+f+"'";
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);            
            if(hasil.next()){
                String ax = hasil.getString("judul_buku");
                String bx = hasil.getString("pengarang");                
                String cx = hasil.getString("penerbit");
                String dx = hasil.getString("jumlah");
                
                labelJudulBuku.setText(ax);
                labelPengarangBuku.setText(bx);
                labelPenerbitBuku.setText(cx);
                labelJumlah.setText(dx);
            }
        }catch(SQLException exception){
            
        }
        
        //Jika row di table di click, data anggota juga terisi
        try{
            String sql = "SELECT * FROM anggota where id_anggota='"+d+"'";
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);

            if(hasil.next()){
                String ay = hasil.getString("nama");
                String by = hasil.getString("nis");
                String cy = hasil.getString("no_tlp");

                labelNama.setText(ay);
                labelNIS.setText(by);
                labelNoTeleponAnggota.setText(cy);
            }else{

            }
        }catch(SQLException exception){
            
        } 

    }//GEN-LAST:event_tableTransaksiPeminjamanBukuMouseClicked

    private void dateChooserTglPinjamPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateChooserTglPinjamPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_dateChooserTglPinjamPropertyChange

    private void dateChooserTglKembaliPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dateChooserTglKembaliPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_dateChooserTglKembaliPropertyChange

    private void jMenuLaporan1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuLaporan1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuLaporan1MouseClicked

    private void jMenuItemInputDataBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemInputDataBukuActionPerformed
        // TODO add your handling code here:
        new FormInputBuku().setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jMenuItemInputDataBukuActionPerformed

    private void jMenuItemRegistrasiAnggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRegistrasiAnggotaActionPerformed
        // TODO add your handling code here:
        new FormRegistrasi().setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jMenuItemRegistrasiAnggotaActionPerformed

    private void jMenuItemRegistrasiPetugasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemRegistrasiPetugasActionPerformed
        // TODO add your handling code here:
        new FormPetugas().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemRegistrasiPetugasActionPerformed

    private void jMenuItemPeminjamanBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPeminjamanBukuActionPerformed
        // TODO add your handling code here:
        new FormPeminjamanBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemPeminjamanBukuActionPerformed

    private void jMenuItemPengembalianBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPengembalianBukuActionPerformed
        // TODO add your handling code here:
        new FormPengembalianBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemPengembalianBukuActionPerformed

    private void jMenuTransaksiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuTransaksiMouseClicked
        // TODO add your handling code here:
        new FormPeminjamanBuku().setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jMenuTransaksiMouseClicked

    private void jMenuTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuTransaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuTransaksiActionPerformed

    private void jMenuLaporanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuLaporanMouseClicked
        // TODO add your handling code here:
        new FormMasterLaporan().setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jMenuLaporanMouseClicked

    private void jMenuItemLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLogoutActionPerformed
        // TODO add your handling code here:
        new FormLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemLogoutActionPerformed

    private void jMenuLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuLogoutActionPerformed
        // TODO add your handling code here:
        new FormLogin().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuLogoutActionPerformed

    private void jMenuItemMenuPetugasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMenuPetugasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItemMenuPetugasActionPerformed

    private void jMenuItemMenuPengunjungActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMenuPengunjungActionPerformed
        // TODO add your handling code here:
        new FormMenuPengunjung().setVisible(true);
        this.dispose();        
    }//GEN-LAST:event_jMenuItemMenuPengunjungActionPerformed

    private void jMenuItemMenuPetugasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemMenuPetugasMouseClicked
        // TODO add your handling code here:
        new FormMenuUtama().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemMenuPetugasMouseClicked

    private void jMenuItemInputDataBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemInputDataBukuMouseClicked
        // TODO add your handling code here:
        new FormInputBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemInputDataBukuMouseClicked

    private void jMenuItemRegistrasiAnggotaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemRegistrasiAnggotaMouseClicked
        // TODO add your handling code here:
        new FormRegistrasi().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemRegistrasiAnggotaMouseClicked

    private void jMenuItemRegistrasiPetugasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemRegistrasiPetugasMouseClicked
        // TODO add your handling code here:
        new FormPetugas().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemRegistrasiPetugasMouseClicked

    private void jMenuItemPeminjamanBukuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemPeminjamanBukuMouseClicked
        // TODO add your handling code here:
        new FormPeminjamanBuku().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemPeminjamanBukuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormPeminjamanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormPeminjamanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormPeminjamanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormPeminjamanBuku.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormPeminjamanBuku().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonSearchAnggota;
    private javax.swing.JButton buttonSearchKodeBuku;
    private javax.swing.JButton buttonSimpan;
    private com.toedter.calendar.JDateChooser dateChooserTglKembali;
    private com.toedter.calendar.JDateChooser dateChooserTglPinjam;
    private javax.swing.JLabel jLabelTgl;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemInputDataBuku;
    private javax.swing.JMenuItem jMenuItemLogout;
    private javax.swing.JMenuItem jMenuItemMenuPengunjung;
    private javax.swing.JMenuItem jMenuItemMenuPetugas;
    private javax.swing.JMenuItem jMenuItemPeminjamanBuku;
    private javax.swing.JMenuItem jMenuItemPengembalianBuku;
    private javax.swing.JMenuItem jMenuItemRegistrasiAnggota;
    private javax.swing.JMenuItem jMenuItemRegistrasiPetugas;
    private javax.swing.JMenu jMenuLaporan;
    private javax.swing.JMenu jMenuLaporan1;
    private javax.swing.JMenu jMenuLogout;
    private javax.swing.JMenu jMenuMaster;
    private javax.swing.JMenu jMenuTransaksi;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelJudulBuku;
    private javax.swing.JLabel labelJumlah;
    private javax.swing.JLabel labelKodeBuku;
    private javax.swing.JLabel labelKodeBuku1;
    private javax.swing.JLabel labelKodeBuku10;
    private javax.swing.JLabel labelKodeBuku12;
    private javax.swing.JLabel labelKodeBuku13;
    private javax.swing.JLabel labelKodeBuku14;
    private javax.swing.JLabel labelKodeBuku16;
    private javax.swing.JLabel labelKodeBuku2;
    private javax.swing.JLabel labelKodeBuku3;
    private javax.swing.JLabel labelKodeBuku5;
    private javax.swing.JLabel labelKodeBuku6;
    private javax.swing.JLabel labelKodeBuku7;
    private javax.swing.JLabel labelKodeBuku8;
    private javax.swing.JLabel labelKodeBuku9;
    private javax.swing.JLabel labelNIS;
    private javax.swing.JLabel labelNama;
    private javax.swing.JLabel labelNoTeleponAnggota;
    private javax.swing.JLabel labelPenerbitBuku;
    private javax.swing.JLabel labelPengarangBuku;
    private javax.swing.JLabel labelTitle1;
    private javax.swing.JPanel panelAnggota;
    private javax.swing.JPanel panelAnggota1;
    private javax.swing.JTable tableTransaksiPeminjamanBuku;
    private javax.swing.JTextField textfieldIDAnggota;
    private javax.swing.JTextField textfieldIDTransaksi;
    private javax.swing.JTextField textfieldKodeBuku;
    // End of variables declaration//GEN-END:variables
}
